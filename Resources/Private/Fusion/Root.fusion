#
# Prototype to get a single value from the current context by name
#
prototype(PackageFactory.AtomicFusion:GetContext) {
    @class = 'PackageFactory\\AtomicFusion\\Mapping\\Fusion\\GetContextImplementation'
}

#
# Prototype to get a single value from the current context by name
#
prototype(PackageFactory.AtomicFusion:NodeMapping) {
    @class = 'PackageFactory\\AtomicFusion\\Mapping\\Fusion\\NodeMappingImplementation'
}

#
# Override `Neos.Fusion:Collection and apply `Neos.Neos:ContentElementWrapping` automatically
# if the current item is instance of \PackageFactory\AtomicFusion\Mapping\Domain\Model\NodeMapping
#
prototype(Neos.Fusion:Collection) {
    @context.__itemName = ${this.itemName}
    itemRenderer {
        @context.__currentItem = PackageFactory.AtomicFusion:GetContext {
            property = ${__itemName}
        }
        @process.implicitContentElementWrapping {
            @if.currentItemIsNodeMapping = ${q(__currentItem).is('[instanceof PackageFactory\\AtomicFusion\\Mapping\\Domain\\Model\\NodeMapping]')}
            expression = Neos.Neos:ContentElementWrapping {
                node = ${__currentItem.node}
            }
        }
    }
}

